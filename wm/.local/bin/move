#!/bin/sh
#
# move - move window in a given direction

get() {
    arg=$1; shift

    # filthy json parsing
    var=${*#*\"$arg\":}
    var=${var%%[,\}]*}

    echo "$var"
}

case $1 in
    east)  fdim=width;  tdim=height; sign=+;;
    west)  fdim=width;  tdim=height; sign=-;;
    north) fdim=height; tdim=width;  sign=-;;
    south) fdim=height; tdim=width;  sign=+
esac

case $(get state "$(bspc query -T -n)") in
    '"tiled"')
        # try to replace a preselection or to move the window normally
        bspc node -n "$1.!automatic" || bspc node -s "$1.tiled" || {
            node=$(bspc query -N -n)

            while parent=$(bspc query -N -n "$node#@parent"); do
                # compare height or width to parent
                [                                                              \
                    "$(get "$tdim" "$(bspc query -T -n "$node#@parent")")" -gt \
                    "$(get "$tdim" "$(bspc query -T -n "$node")")"             \
                ] && {
                    # climb up the tree using a receptacle
                    bspc node "$node#@parent" -p "$1" -i

                    bspc node "$node" -n \
                        "$(bspc query -N "$node#@parent#@parent" -n .descendant_of.leaf.!window)"

                    bspc node "$node#@parent" -B

                    break
                }

                node=$parent
            done
        }
        ;;
    '"floating"')
        percent=5

        # get a percentage of the monitor resolution
        var=$((`get "$fdim" "$(bspc query -T -m)"` * percent / 100))

        case $fdim in
            width)  x=$sign$var; y=0;;
            height) y=$sign$var; x=0
        esac

        bspc node -v "$x" "$y"
        ;;
    *) exit
esac

cursor
