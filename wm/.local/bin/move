#!/bin/sh
#
# move - move the focused window in a given direction

die() {
    printf '%s\n' \
        "${1:-usage : ${0##*/} <east|west|north|south>}" >&2

    exit 1
}

json() {
    arg=$1; shift

    # filthy json parsing
    var=${*#*\"$arg\":}
    var=${var%%[,\}]*}

    printf '%s\n' "$var"
}

readonly PERCENT=5

case $* in
    east)  f_dim=width ; t_dim=height; sign=+;;
    west)  f_dim=width ; t_dim=height; sign=-;;
    north) f_dim=height; t_dim=width ; sign=-;;
    south) f_dim=height; t_dim=width ; sign=+;;
    *)
        die
esac

case $(json state "$(bspc query -T -n)") in
    '"tiled"')
        # try to replace a preselection or to move the window normally
        {
            bspc node -n "$*.!automatic" ||
            bspc node -s      "$*.tiled"
        } || {
            node=$(bspc query -N -n)

            while parent=$(bspc query -N -n "$node#@parent"); do
                # compare dimensions to parent
                [ \
                    $((
                        $(json "$t_dim" "$(bspc query -T -n "$parent")") >
                        $(json "$t_dim" "$(bspc query -T -n   "$node")")
                     )) -eq 1 \
                ] && {
                    # climb up the tree using receptacles
                    bspc node "$parent" -p "$*" -i

                    bspc node "$node" -n \
                        "$(bspc query -N "$parent#@parent" -n .descendant_of.leaf.!window)"

                    bspc node "$parent" -B

                    break
                }

                node=$parent
            done
        }
        ;;
    '"floating"')
        # get a percentage of the resolution
        : $((var = $(json "$f_dim" "$(bspc query -T -m)") * PERCENT / 100))

        case $f_dim in
            width)  x=$sign$var; y=0;;
            height) y=$sign$var; x=0;;
        esac

        bspc node -v "$x" "$y"
        ;;
    *) exit 1
esac

cursor

: # fix exit status
